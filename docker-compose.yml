services:
  rails:
    build: .
    restart: unless-stopped
    ports:
      - "3000:3000"
    volumes:
      - ".:/var/source"
      - "ruby-gems:/usr/local/bundle"
    environment:
      DATABASE_CLEANER_ALLOW_REMOTE_DATABASE_URL: true
      DATABASE_URL: "postgres://pgsql:password@pgsql:5432"
      SMTP_HOST: mailpit
      VITE_RUBY_HOST: "vite"
    healthcheck:
      test: 'pumactl status | grep "Puma is started" && exit 0 || exit 1'
      start_period: 120s
      start_interval: 1s
      interval: 15s
    depends_on:
      pgsql:
        condition: service_healthy

  pgsql:
    image: postgres:17
    restart: unless-stopped
    ports:
      - 5433:5432
    volumes:
      - pgsql-data:/var/lib/postgresql/data
      - ./docker/postgres_setup.sql:/docker-entrypoint-initdb.d/10-database-setup.sql:ro
    environment:
      POSTGRES_USER: pgsql
      POSTGRES_PASSWORD: password
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-d", "db_prod"]
      start_period: 60s
      start_interval: 1s

  vite:
    build: .
    entrypoint: /var/source/bin/vite dev
    restart: unless-stopped
    ports:
      - 3036:3036
    volumes:
      - ".:/var/source"
      - "ruby-gems:/usr/local/bundle"
    environment:
      VITE_RUBY_HOST: 0.0.0.0
    healthcheck:
      test: curl --fail http://localhost:3036
      start_interval: 2s
      start_period: 30s
    depends_on:
      rails:
        condition: service_healthy

  mailpit:
    image: axllent/mailpit
    ports:
      - "8025:8025"

  image_processing:
    image: python:3.10
    entrypoint: ["/bin/sh", "entrypoint.sh"]
    working_dir: /var/source
    volumes:
      - "./docker/image_processing:/var/source"
      - "./tmp/snapshots:/var/snapshots"
      - "python:/usr/local/lib/python3.10"
    profiles:
      - image_processing

  pgadmin:
    image: dpage/pgadmin4
    ports:
      - 5000:80
    environment:
      - PGADMIN_DEFAULT_EMAIL=user@example.com
      - PGADMIN_DEFAULT_PASSWORD=password
      - PGADMIN_CONFIG_SERVER_MODE=False
      - PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED=False
    volumes:
      - "./docker/pgadmin/servers.json:/pgadmin4/servers.json:ro"
      - "./docker/pgadmin/preferences.json:/pgadmin4/preferences.json:ro"
    configs:
      - source: pgadmin.password
        target: /pgpass
        mode: 0400
        uid: "5050"
    profiles:
      - pgadmin
    depends_on:
      - pgsql

volumes:
  pgsql-data:
  ruby-gems:
  python:

configs:
  pgadmin.password:
    content: pgsql:5432:*:pgsql:password
